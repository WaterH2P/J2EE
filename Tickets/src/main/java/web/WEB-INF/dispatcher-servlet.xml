<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.0.xsd">

    <!-- 自动扫描 tickets 下或子包下的 Java 文件，如果扫描到有 @Component @Controller @Service 等注解的类，则把这些类注册为 Bean -->
    <context:component-scan base-package="tickets"/>

    <!-- 配置注解式处理器映射器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping"></bean>

    <!-- 配置注解式处理器适配器 -->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <ref bean="mappingJacksonHttpMessageConverter" />
            </list>
        </property>
    </bean>

    <bean id="mappingJacksonHttpMessageConverter"
          class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name = "supportedMediaTypes">
            <list>
                <bean class="org.springframework.http.MediaType">
                    <constructor-arg index="0" value="text"/>
                    <constructor-arg index="1" value="plain"/>
                    <constructor-arg index="2" value="UTF-8"/>
                </bean>
            </list>
        </property>
    </bean>

    <!-- 上面两个可以使用 直接配置注解驱动 代替 -->
    <!--<mvc:annotation-driven>-->
        <!--<mvc:message-converters>-->
            <!--<bean class="org.springframework.http.converter.StringHttpMessageConverter"/>-->
            <!--<bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>-->
        <!--</mvc:message-converters>-->
    <!--</mvc:annotation-driven>-->

    <mvc:resources location="WEB-INF/stylesheet/" mapping="/stylesheet/**" />
    <mvc:resources location="WEB-INF/javascript/" mapping="/javascript/**" />
    <mvc:resources location="WEB-INF/image/" mapping="/image/**" />

    <!-- 配置视图解析器(对jsp默认解析的视图解析器) -->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- prefix：前缀 -->
        <property name="prefix" value="/WEB-INF/view/" />
        <!-- suffix：后缀 -->
        <property name="suffix" value=".html" />
        <property name="contentType" value="text/html;charset=UTF-8"></property>
    </bean>

    <!-- 发送邮件 -->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <!--<property name="host" value="smtp.126.com" />-->
        <property name="host" value="smtp.exmail.qq.com" />
        <!--<property name="username" value="z110a110@126.com" />-->
        <property name="username" value="151250066@smail.nju.edu.cn" />
        <property name="password" value="" />
        <property name="defaultEncoding" value="UTF-8" />
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">true</prop>
                <prop key="mail.smtp.timeout">25000</prop>
            </props>
        </property>
    </bean>

    <bean id="simpleMailMessage" class="org.springframework.mail.SimpleMailMessage">
        <property name="from" value="151250066@smail.nju.edu.cn" />
    </bean>

</beans>
